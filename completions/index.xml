<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Completions on Zulu documentation</title><link>https://zulucmd.github.io/zulu/completions/</link><description>Recent content in Completions on Zulu documentation</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://zulucmd.github.io/zulu/completions/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://zulucmd.github.io/zulu/completions/completion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zulucmd.github.io/zulu/completions/completion/</guid><description>Shell completions Zulu can generate shell completions for multiple shells. The currently supported shells are:
Bash Zsh fish PowerShell Zulu will automatically provide your program with a fully functional completion sub-command, similarly to how it provides the help command.
Zulu&amp;rsquo;s completion scripts provide the following features:
Supports completion descriptions (like the other shells). Small completion script of less than 300 lines. Streamlined user experience thanks to a completion behavior aligned with the other shells.</description></item><item><title/><link>https://zulucmd.github.io/zulu/completions/bash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zulucmd.github.io/zulu/completions/bash/</guid><description>Bash Bash completion can be used by calling command.GenBashCompletion() or command.GenBashCompletionFile(). It supports descriptions for completions. When calling the functions you must provide it with a parameter indicating if the completions should be annotated with a description; Zulu will provide the description automatically based on usage information. You can choose to make this option configurable by your users.
# With descriptions $ helm s[tab][tab] search (search for a keyword in charts) status (display the status of the named release) show (show information of a chart) # Without descriptions $ helm s[tab][tab] search show status Dependencies The bash completion script generated by Zulu requires the bash_completion package.</description></item><item><title/><link>https://zulucmd.github.io/zulu/completions/zsh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zulucmd.github.io/zulu/completions/zsh/</guid><description>Zsh Zsh completion can be used by calling command.GenZshCompletion() or command.GenZshCompletionFile(). It supports descriptions for completions. When calling the functions you must provide it with a parameter indicating if the completions should be annotated with a description; Zulu will provide the description automatically based on usage information. You can choose to make this option configurable by your users.
The generated completion script should be put somewhere in your $fpath and be named _&amp;lt;yourProgram&amp;gt;.</description></item><item><title/><link>https://zulucmd.github.io/zulu/completions/fish/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zulucmd.github.io/zulu/completions/fish/</guid><description>Fish Fish completion can be used by calling command.GenFishCompletion() or command.GenFishCompletionFile(). It supports descriptions for completions. When calling the functions you must provide it with a parameter indicating if the completions should be annotated with a description; Zulu will provide the description automatically based on usage information. You can choose to make this option configurable by your users.
# With descriptions $ helm s[tab] search (search for a keyword in charts) show (show information of a chart) status (displays the status of the named release) # Without descriptions $ helm s[tab] search show status Note: Because of backward-compatibility requirements, we were forced to have a different API to disable completion descriptions between zsh and fish.</description></item><item><title/><link>https://zulucmd.github.io/zulu/completions/powershell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zulucmd.github.io/zulu/completions/powershell/</guid><description>PowerShell PowerShell completion can be used by calling the command.GenPowerShellCompletion() or command.GenPowerShellCompletionFile() functions. It supports descriptions for completions. When calling the functions you must provide it with a parameter indicating if the completions should be annotated with a description; Zulu will provide the description automatically based on usage information. You can choose to make this option configurable by your users.
The script is designed to support all three PowerShell completion modes:</description></item></channel></rss>