#!/usr/bin/env python

import argparse
import json
from typing import IO


def extract_const(filename: str, type: str, skip_items: list[str], output: IO):
    lines = []
    record = False
    found = False
    with open(filename) as f:
        for line in f:
            line = line.strip()
            if line == "const (":
                record = True
            elif record and line == ")":
                record = False
                if found:
                    break
                else:
                    lines = []
            elif record:
                lines.append(line)
                if type in line:
                    found = True

    type_lines = []
    all_types = {}
    for line in lines:
        if not line:
            continue

        if not line.startswith("//"):
            type_const = line.split(" ")[0]
            type_lines.append(type_const)
            if type_const[0].isupper() and not any(item == type_const for item in skip_items):
                all_types[type_const] = "\n".join(type_lines) + "\n"
            type_lines = []
        else:
            type_lines.append(line)

    output.write("\n".join(all_types.values()))
    # print("\n".join([t for t in all_types.values()]), output)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--skip-const', type=str, action='append', default=[], help='List of consts to skip')
    parser.add_argument('--output', '-o', type=argparse.FileType('w'), default='-', help='Filename to output to')
    parser.add_argument('filename', help='Filename to extract from')
    parser.add_argument('type', help='Type to extract')
    args = parser.parse_args()

    extract_const(args.filename, args.type, args.skip_const, args.output)
